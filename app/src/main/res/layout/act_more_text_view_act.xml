<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <TextView
        android:id="@+id/tv_1"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:ellipsize="marquee"
        android:focusable="true"
        android:focusableInTouchMode="true"
        android:marqueeRepeatLimit="marquee_forever"
        android:scrollHorizontally="true"
        android:singleLine="true"
        android:text="Hello World最近的需求中，需要用到一个横向、竖向同时可滚动的 ViewPager，记住，是横向、竖向同时滚动，不是横竖切换。我想了想，难点在于竖向。对于竖向的 ViewPager，我似乎记得 Jake Wharton 大神写过一个叫 DirectionalViewPager 的框架"
        app:layout_constraintTop_toTopOf="parent" />

    <com.example.administrator.androidtest.Widget.MoreTextView
        android:id="@+id/mtv_text"
        android:maxLines="2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="20dp"
        app:mtv_has_animation="true"
        app:mtv_close_suffix_str=" 嘻嘻"
        android:text="Hello World最近的需求中，需要用到一个横向、竖向同时可滚动的 ViewPager，记住，是横向、竖向同时滚动，不是横竖切换。我想了想，难点在于竖向。对于竖向的 ViewPager，我似乎记得 Jake Wharton 大神写过一个叫 DirectionalViewPager 的框架"
        app:layout_constraintTop_toBottomOf="@+id/tv_1" />

    <TextView
        android:id="@+id/tv_2"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="20dp"
        android:text="Hello World最近的需求中，需要用到一个横向、竖向同时可滚动的 ViewPager，记住，是横向、竖向同时滚动，不是横竖切换。我想了想，难点在于竖向。对于竖向的 ViewPager，我似乎记得 Jake Wharton 大神写过一个叫 DirectionalViewPager 的框架"
        app:layout_constraintTop_toBottomOf="@+id/mtv_text" />
</androidx.constraintlayout.widget.ConstraintLayout>