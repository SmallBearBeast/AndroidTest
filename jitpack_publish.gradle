apply plugin: 'maven-publish'

def publishToMaven(artifactId) {
    afterEvaluate {
        publishing {
//            repositories {
//                maven { url uri('../repo') }
//            }
            publications {
                // Creates a Maven publication called "release".
                release(MavenPublication) {
                    // 通过添加components.release，不需要手动的添加依赖传递信息
                    // 默认会带上依赖，不需要再单独添加dependencies。
                    from components.release
                    //建议和github地址对应，否则对jitpack无效
                    groupId = 'com.github.SmallBearBeast'
                    //建议和github仓库名称对应，否则对jitpack无效
                    it.artifactId = artifactId
                    //建议和release的tag相同，否则对jitpack无效
                    version = publish_version
                    // 没有通过from components.release需要手动添加依赖。
//                pom.withXml {
//                    def dependenciesNode = asNode().appendNode('dependencies')
//                    def scopes = []
//                    if (configurations.hasProperty("api")) {
//                        scopes.add(configurations.api)
//                    }
//                    if (configurations.hasProperty("implementation")) {
//                        scopes.add(configurations.implementation)
//                    }
//                    if (configurations.hasProperty("debugImplementation")) {
//                        scopes.add(configurations.debugImplementation)
//                    }
//                    if (configurations.hasProperty("releaseImplementation")) {
//                        scopes.add(configurations.releaseImplementation)
//                    }
//
////                    if (project.ext.targetType != "jar") {
////                        scopes.add(configurations.provided)
////                    }
//
//                    scopes.each { scope ->
//                        scope.allDependencies.each {
//                            if (it instanceof ModuleDependency) {
//                                boolean isTransitive = ((ModuleDependency) it).transitive
//                                if (!isTransitive) {
//                                    println "<<<< not transitive dependency: [${it.group}, ${it.name}, ${it.version}]"
//                                    return
//                                }
//                            }
//
//                            if (it.group && it.name && it.version && it.version != 'unspecified') {
//                                def dependencyNode = dependenciesNode.appendNode('dependency')
//                                dependencyNode.appendNode('groupId', it.group)
//                                dependencyNode.appendNode('artifactId', it.name)
//                                dependencyNode.appendNode('version', it.version)
//                                dependencyNode.appendNode('scope', scope.name)
//                            }
//                        }
//                    }
//                }
                }
            }
        }
    }
}

ext {
    publish_version = '1.0.7'
    publishToMaven = this.&publishToMaven
}